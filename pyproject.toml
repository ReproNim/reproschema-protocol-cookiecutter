[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "reproschema-protocol-cookiecutter"
version = "1.0.0"
description = "A Cookiecutter template for creating ReproSchema protocols"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache-2.0"}
authors = [
    {name = "ReproNim Team", email = "info@repronim.org"}
]
keywords = ["reproschema", "cookiecutter", "template", "protocol", "assessment"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering"
]

dependencies = [
    "cruft>=2.15.0",
    "requests>=2.31.0",
    "requests-cache>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.5.0",
    "pytest>=7.4.0",
    "pytest-cookies>=0.7.0",
    "pytest-cov>=4.1.0",
    "black>=23.12.0",
    "ruff>=0.1.9",
]

validation = [
    "jsonschema>=4.20.0",
    "pyyaml>=6.0.1",
    "reproschema>=0.1.0",
]

docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
]

all = ["reproschema-protocol-cookiecutter[dev,validation,docs]"]

[project.urls]
Homepage = "https://github.com/ReproNim/reproschema-protocol-cookiecutter"
Documentation = "https://www.repronim.org/reproschema/"
Repository = "https://github.com/ReproNim/reproschema-protocol-cookiecutter"
Issues = "https://github.com/ReproNim/reproschema-protocol-cookiecutter/issues"

[tool.ruff]
select = ["E", "F", "W", "I", "N", "B", "UP"]
ignore = ["E501"]  # Line too long
target-version = "py38"
line-length = 88

[tool.ruff.per-file-ignores]
"hooks/*.py" = ["UP"]  # Allow older syntax in hooks for compatibility
"{{cookiecutter.protocol_name}}/**" = ["ALL"]  # Don't lint template files

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
skip-string-normalization = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=hooks",
    "--cov-report=term-missing",
    "--cov-report=html",
    "-v"
]

[tool.coverage.run]
source = ["hooks"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/{{cookiecutter.protocol_name}}/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.bandit]
exclude_dirs = ["tests", "{{cookiecutter.protocol_name}}"]
skips = ["B101"]  # Allow assert statements in code