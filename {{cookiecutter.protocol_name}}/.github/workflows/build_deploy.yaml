name: Continuous Integration and Deployment of {{cookiecutter.protocol_name}}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Set Environment Variable
      run: |
        echo "PROTOCOL_SLUG=$(echo '{{cookiecutter.__protocol_slug}}')" >> $GITHUB_ENV
    
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetches the entire history for comprehensive CI checks

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14.x' # Updated to a more recent LTS version

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9' # Updated to Python 3.9

    - name: Install system dependencies
      run: sudo apt-get install jq

    - name: Get latest commit hash from reproschema-ui
      run: |
        LATEST_HASH=$(curl -s https://api.github.com/repos/ReproNim/reproschema-ui/commits/main | jq -r '.sha')
        echo "LATEST_COMMIT_HASH=$LATEST_HASH" >> $GITHUB_ENV

    - name: Install Node dependencies and validate JSON
      run: |
        npm install -g jsonlint
        grep -r "@context" activities | cut -d: -f1 | xargs -I {} jsonlint -q {}
        grep -r "@context" $PROTOCOL_SLUG | cut -d: -f1 | xargs -I {} jsonlint -q {}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install reproschema requests_cache pre-commit
    
    - name: Test with pyshacl
      run: |
        reproschema -l DEBUG validate activities
        reproschema -l DEBUG validate "${PROTOCOL_SLUG}/${PROTOCOL_SLUG}_schema"

    - name: Build and prepare UI
      run: |
        curl -O -sSL https://github.com/ReproNim/reproschema-ui/archive/${LATEST_COMMIT_HASH}.zip
        unzip ${LATEST_COMMIT_HASH}.zip
        mv reproschema-ui-* ui
        cp -r ../ui-changes/. ui/
        cd ui
        # Modify the title in index.html
        sed -i 's/<title>.*<\/title>/<title>{{cookiecutter.protocol_name}}<\/title>/' public/index.html
        npm install
        npm run build
        touch dist/.nojekyll

    - name: Deploy to GitHub Pages ðŸš€
      if: github.ref == 'refs/heads/main'
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
        branch: gh-pages
        folder: ui/dist
